<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancle.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEQAAABECAYAAAA4E5OyAAAABGdBTUEAALGPC/xhBQAAA/ZJREFUeF7t
        nL1uE0EUhV3xHhDR0dDyFMh1XgHlAVBojChoKChSJnVqeIkUSe0/2Ui4QRGUKA3mnNWdaHd91/bO3pnZ
        jeZInwje2Tv3Htuzs+vZHcXSfD4/Aaez2WwCrsHtdDpdgXvwIPDvFbdJmwn34b4SZrjabrfPUNAYXIIf
        KHTbBcaQWGPGlm76L7ybr5H0BfitFWYBY7MP9iXd9k+LxeINkvyuFRAS9sm+JY30QkIvwDct2ZgwB+Yi
        acWXjBHn4K+WYAqYC3OKPsas1+vnSOCmnlCPuGGOkm5Y4fv6Fu/CHyWJXsEcmaukHUbo5B34pyXQR5gr
        c5b0bYXAH7VOhwBzlzJsNGQzHGam8COndTBEWIuU5ScZQAczZhyCtXgPtDxsIUDvjyZtYU2tD8mc2GDn
        Ps8zunLTavKGk6YPSpAnBT4p51LufqEhz016Mx0PBWtkrVJ2s9Ao+YlaLFirlK2Lp9Hajk8Z1izl7wqO
        Rb+ekRrWLOVXxatP2g5dQMxP+HdTf70DG4mpbfNGvfIGpy60xr4g3hnjLpfLl/i/hSkbxpJcz5Tt3rB2
        xn2UXOwxuwbqzHAyMOXRDCdLU1h7ZV6CF8ZaQx8Q67OEraiDKTtmOLEvpb0X9EDCFoGvtEY+INYvjNyv
        JHRFHqY0msE+2Jeyjxf0QEIXhnT+3aSMkSnRzCD0oAiOEfZEa9CVjqZENcNBL2jIqbbRAk9TkphB6AW/
        LhNtoxUtTUlmBqEXNORa22jJkaYkNYPQCxpyp2205pApqc0g9GKEP7gkQW1gzT5TNMU0Q1jREK7J0DYG
        4VhTEphB7mkIF6poG4NxyJREZpCHVIb8bBozKG5jG23fwBSGxP7K7DXDiW3Q/pgZrSXFVybaoAoaD62a
        EpiyinbYBXvnGU1jSkxT4MVtlIkZODjpIqlNoRfBp+7g6BloalPoRdCTO9B6Op7SlOLkjqe82kYDWpvh
        SGUKvSg6QQKmF4iAtxmO2KbQAwlvewkRdDbDEdMU9HUpoQtDLC8yf5GwFbU1w7HPFPal7eMDPZCwQX6G
        eC+hC/ma4eC+dVPYh9bWB9a+szwCL1r/UFWY0tUMB2M4Uxhba+MLa2fcijDChvgp86uFGQ7GYkxtWxdY
        u9hQFTrMP3aXhY9kXg5RFxzLC2bKQqO8pKouDDJ50V1ZPCZjp7wss6y8cFcRRuC8tLsuBMmL/+tCoHx7
        SF1DNsXcDCd+5EC+xawsGWjzTYhl8bCFTvNtqmVxYsMZLd6JXt3IzJxaT7oshSTyre6aeBqNhPLDEOri
        1SckmR+XURe/x0iaD1S5AlYPVGGsYT1QpUl4N+uP3OGqg6ZH7txJm8iP3BmN/gPTIsoCiIr9NwAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>