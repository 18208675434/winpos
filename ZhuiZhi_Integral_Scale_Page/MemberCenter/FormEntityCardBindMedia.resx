<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFQAAABMCAYAAADz7pA3AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQUSURBVHhe7ZtNSBRhGMenT4k6FBWkM2qUdIiCTh0kunYo6CgeAgvsEBEEHSPqoOAhpMJvTVer
        g9QhomuKRdeIqEsF0ceh3E3BdbVwffo/2xuN7765M/JOzu4+f/gxMO877zzPz3FnRlwnitDISD0lEt3g
        FQ0NfQWfwRi4hLFKNU1SKHT79k5IfARxtAzzoA/z9qnDJKbQ4OAu8F6TtxxZcB9iD6slJP5AzoRPVlie
        0PDwMbWUBFdZg0HSSngBGml0dJ1auvxCjrMGEvjmYxK0Ut7jh3QOYjep05RP0PgJgxBb8BPCZbp7d5s6
        XekHQp9qEqJgBue5TnfueOq0pRkaGDhiaD5KfoBBPJ7tVyWUVtBcoWfOqOBHrocQW69KKf7gMecAmlr0
        NblaTODt6zjfHFVpxRl8pg0bmltNXuGHfIrGxtarEosnuOvWooGfWkPxIJH4gO0FyN2syo1/UPTNvEbi
        RiIxiVfhq9huV2XHM3Tv3g4UOmtsIp6kcbXeoP7+WtVCvIICr2kFFws/cbWO4GI4qFpZ/VBHxxYUltIK
        LTYWIfYxtkdVW6sXFHHRV1gp8BxyTxLR/3/kop6eDSjgk1ZQqfAGnKbR0Y2q3WiS+0tSXV0Fs9Db24ST
        zpU47/D2dX6qqWnrn77zCPsCMeW6h5Ku2znpuu+wnQckLGFeuelkV0pbft7Cfsp1ezAx6ztYWJ4sO2N3
        SuPvvHWcCgyOa5OF4IyzQ6XTcbCjS5sghKcrJ/O75x3EZbtgmCCEgB2ySydZVXXDNEFYAXDpJD3vtXFQ
        CA9c8ufnTN6ACc+j5N695Qn3bnKSzwwLNQ38ZfduynR2UnZ2Fm9o5RnunR2wC6MjHwWFzt66pZaVsAuT
        Iz8FhWanp9VyEnZhcuSnsNBkUi0nYRcmR34KCk23tanlJOzC5MhP4ZtSdTWlW1po4csXWsxkyhLunR2w
        C6MjH4WFCqEQoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYR
        oZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYRoZYpHqGeR6k9ewIR6D+Oba+niL/QmhrKNDfTYl+f6TuaRnhu
        5uzZ3LGRr6cRe6GZM2eMTQaBj416PZ3YC812dxubCwIfG/V6OvEX2tFhbC4IfGzU6+nEXmi6sdHYXBD4
        2KjX04n/TQl32HRDAy20t+d+5YLAc/kY493Z9noaTsp1p00DQnjYpTPpui9Ng0J42CV/17PNNCisALh0
        vnleHS7VH8YJQmDYIbvMfWceO1r1CUJoWnMyOeQ4a7HjgTZBCM4Ddqh0/g7vSFVVXcPgnDZZ+Ddz7CxP
        pj/fKytrMOkKPhOegY9gSlgCO3nGjtiV0qbiOL8AZlQZpr+f1nsAAAAASUVORK5CYII=
</value>
  </data>
</root>