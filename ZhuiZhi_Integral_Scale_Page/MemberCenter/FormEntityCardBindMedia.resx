<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFQAAABMCAYAAADz7pA3AAAABGdBTUEAALGPC/xhBQAABBRJREFUeF7t
        m01IFGEYx6dPiToUFaQzapR0iIJOHSS6dijoKB4CC+wQEQQdI+qg4CGkwm9NV6uD1CGia4pF14ioSwXR
        x6HcTcF1tXB9+j/bG43vvrkz8k7O7j5/+DEw7zvvPM/PcWdGXCeK0MhIPSUS3eAVDQ19BZ/BGLiEsUo1
        TVIodPv2Tkh8BHG0DPOgD/P2qcMkptDg4C7wXpO3HFlwH2IPqyUk/kDOhE9WWJ7Q8PAxtZQEV1mDQdJK
        eAEaaXR0nVq6/EKOswYS+OZjErRS3uOHdA5iN6nTlE/Q+AmDEFvwE8Jlunt3mzpd6QdCn2oSomAG57lO
        d+546rSlGRoYOGJoPkp+gEE8nu1XJZRW0FyhZ86o4EeuhxBbr0op/uAx5wCaWvQ1uVpM4O3rON8cVWnF
        GXymDRuaW01e4Yd8isbG1qsSiye469aigZ9aQ/EgkfiA7QXI3azKjX9Q9M28RuJGIjGJV+Gr2G5XZccz
        dO/eDhQ6a2winqRxtd6g/v5a1UK8ggKvaQUXCz9xtY7gYjioWln9UEfHFhSW0gotNhYh9jG2R1VbqxcU
        cdFXWCnwHHJPEtH/f+Sinp4NKOCTVlCp8AacptHRjardaJL7S1JdXQWz0NvbhJPOlTjv8PZ1fqqpaeuf
        vvMI+wIx5bqHkq7bOem677CdByQsYV656WRXSlt+3sJ+ynV7MDHrO1hYniw7Y3dK4++8dZwKDI5rk4Xg
        jLNDpdNxsKNLmyCEpysn87vnHcRlu2CYIISAHbJLJ1lVdcM0QVgBcOkkPe+1cVAID1zy5+dM3oAJz6Pk
        3r3lCfducpLPDAs1Dfxl927KdHZSdnYWb2jlGe6dHbALoyMfBYXO3rqllpWwC5MjPwWFZqen1XISdmFy
        5Kew0GRSLSdhFyZHfgoKTbe1qeUk7MLkyE/hm1J1NaVbWmjhyxdazGTKEu6dHbALoyMfhYUKoRChlhGh
        lhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGhlhGh
        lhGhlhGhlhGhlhGhlikeoZ5HqT17AhHoP45tr6eIv9CaGso0N9NiX5/pO5pGeG7m7NncsZGvpxF7oZkz
        Z4xNBoGPjXo9ndgLzXZ3G5sLAh8b9Xo68Rfa0WFsLgh8bNTr6cReaLqx0dhcEPjYqNfTif9NCXfYdEMD
        LbS3537lgsBz+Rjj3dn2ehpOynWnTQNCeNilM+m6L02DQnjYJX/Xs800KKwAuHS+eV4dLtUfxglCYNgh
        u8x9Zx47WvUJQmhaczI55DhrseOBNkEIzgN2qHT+Du9IVVVdw+CcNln4N3PsLE+mP98rK2sw6Qo+E56B
        j2BKWAI7ecaO2JXSpuI4vwBmVBmmv5/WewAAAABJRU5ErkJggg==
</value>
  </data>
</root>